close all;

As = [-10, 0; 0, -100];
Bs = [10; 100];
Cs = [1, 0; 0, 1; 0, 0];
Ds = [0; 0; 1];

Gsubs = ss(As, Bs, Cs, Ds);
s = tf('s');

G = Gsubs * 1/(s+1);

G

w1 = 0.1;
w2 = 0.1;
w3 = 0.1;

A0 =[-10, 0, 10; 0, -100, 100; 0, 0, -1];
B = [0; 0; 1];
C = [0, 0, 1];

simulate_nonlinear_step(w1, w2, w3);

n = size(A0, 1)
m = size(B, 2)

gama = 2;
lamda = 0.1;



for w1 = [0.1:0.1:0.1]
    for w2 = [0.1:0.1:]
        
        N = [zeros(2,3); w1, w2, w3];

        cvx_begin sdp
            variable P(n,n) symmetric

            LMI1 = P >= 0
            % gain LMI
            LMI2 = [ A0'*P + P*A0 + 2*lamda*P + 1/gama * C'*C, P*B;
                    B'*P, -gama * eye(1)] <= 0;

            LMI3 = [(A0+N)'*P + P*(A0+N) + 2*lamda*P + 1/gama * C'*C, P*B;
                    B'*P, -gama*eye(1)] <= 0;

        cvx_end

        if strcmp(cvx_status, 'Solved')
                fprintf('Feasible solution found for w1 = %.2f\n', w1);
                break
        else
                fprintf('No solution for w1 = %.2f, status: %s\n', w1, cvx_status);
        end
    end
end